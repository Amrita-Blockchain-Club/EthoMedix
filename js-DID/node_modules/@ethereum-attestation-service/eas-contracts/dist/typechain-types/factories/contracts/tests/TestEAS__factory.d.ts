import { ContractFactory, ContractTransactionResponse } from "ethers";
import type { Signer, AddressLike, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { TestEAS, TestEASInterface } from "../../../contracts/tests/TestEAS";
type TestEASConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class TestEAS__factory extends ContractFactory {
    constructor(...args: TestEASConstructorParams);
    getDeployTransaction(registry: AddressLike, overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<ContractDeployTransaction>;
    deploy(registry: AddressLike, overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<TestEAS & {
        deploymentTransaction(): ContractTransactionResponse;
    }>;
    connect(runner: ContractRunner | null): TestEAS__factory;
    static readonly bytecode = "0x6101e0604052600780546001600160401b03191690553480156200002257600080fd5b5060405162004f5838038062004f5883398101604081905262000045916200021e565b604080518082018252600381526245415360e81b602080830191909152825180840190935260058352640312e322e360dc1b908301526001608052600260a052600060c081905283929082908290620000a090839062000199565b61018052620000b181600162000199565b6101a052815160208084019190912061014052815190820120610160524661010052620001426101405161016051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60e0525050306101205260026200015a8382620002f5565b5050506001600160a01b03811662000185576040516311a1e69760e01b815260040160405180910390fd5b6001600160a01b03166101c0525062000436565b6000602083511015620001b957620001b183620001d2565b9050620001cc565b81620001c68482620002f5565b5060ff90505b92915050565b600080829050601f8151111562000209578260405163305a27a960e01b8152600401620002009190620003c1565b60405180910390fd5b8051620002168262000411565b179392505050565b6000602082840312156200023157600080fd5b81516001600160a01b03811681146200024957600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200027b57607f821691505b6020821081036200029c57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002f057600081815260208120601f850160051c81016020861015620002cb5750805b601f850160051c820191505b81811015620002ec57828155600101620002d7565b5050505b505050565b81516001600160401b0381111562000311576200031162000250565b620003298162000322845462000266565b84620002a2565b602080601f831160018114620003615760008415620003485750858301515b600019600386901b1c1916600185901b178555620002ec565b600085815260208120601f198616915b82811015620003925788860151825594840194600190910190840162000371565b5085821015620003b15787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208083528351808285015260005b81811015620003f057858101830151858201604001528201620003d2565b506000604082860101526040601f19601f8301168501019250505092915050565b805160208083015191908110156200029c5760001960209190910360031b1b16919050565b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516101c051614a8d620004cb600039600081816105b90152818161169b0152611fff01526000610df401526000610dca01526000612a9001526000612a68015260006129c3015260006129ed01526000612a1701526000610cca01526000610ca101526000610c780152614a8d6000f3fe6080604052600436106101ac5760003560e01c80637e4e1292116100ec578063cf190f341161008a578063e71ff36511610064578063e71ff3651461055d578063ed24911d1461057d578063f10b5cc814610592578063f17325e7146105e357600080fd5b8063cf190f34146104c7578063d45c4435146104e7578063e30bb5631461051e57600080fd5b8063a3112a64116100c6578063a3112a64146103fa578063a6d4dbc714610427578063b469318d1461043a578063b83010d31461049457600080fd5b80637e4e12921461036957806384b0196e146103bf57806395411525146103e757600080fd5b806344adc90e116101595780634d003070116101335780634d003070146102ff57806354fd4d501461031f578063557ed1ba1461033457806379f7573a1461034957600080fd5b806344adc90e146102b957806346926267146102d95780634cb7e9e5146102ec57600080fd5b806317d7de7c1161018a57806317d7de7c146102415780632d0335ab146102635780633c042715146102a657600080fd5b80630eabf660146101b157806312b11a17146101c657806313893f6114610208575b600080fd5b6101c46101bf3660046138bb565b6105f6565b005b3480156101d257600080fd5b507ff83bb2b0ede93a840239f7e701a54d9bc35f03701f51ae153d601c6947ff3d3f5b6040519081526020015b60405180910390f35b34801561021457600080fd5b506102286102233660046138bb565b61078d565b60405167ffffffffffffffff90911681526020016101ff565b34801561024d57600080fd5b506102566107dd565b6040516101ff919061396b565b34801561026f57600080fd5b506101f561027e3660046139b7565b73ffffffffffffffffffffffffffffffffffffffff1660009081526003602052604090205490565b6101f56102b43660046139d4565b61086f565b6102cc6102c73660046138bb565b610972565b6040516101ff9190613a0f565b6101c46102e7366004613a53565b610af3565b6101c46102fa3660046138bb565b610b77565b34801561030b57600080fd5b5061022861031a366004613a6b565b610c5a565b34801561032b57600080fd5b50610256610c71565b34801561034057600080fd5b50610228610d14565b34801561035557600080fd5b506101c4610364366004613a6b565b610d23565b34801561037557600080fd5b506101c4610384366004613a9c565b600780547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001667ffffffffffffffff92909216919091179055565b3480156103cb57600080fd5b506103d4610dbc565b6040516101ff9796959493929190613af2565b6102cc6103f53660046138bb565b610e60565b34801561040657600080fd5b5061041a610415366004613a6b565b6110d3565b6040516101ff9190613c62565b6101c4610435366004613c75565b611295565b34801561044657600080fd5b50610228610455366004613c88565b73ffffffffffffffffffffffffffffffffffffffff919091166000908152600660209081526040808320938352929052205467ffffffffffffffff1690565b3480156104a057600080fd5b507f2d4116d8c9824e4c316453e5c2843a1885580374159ce8768603c49085ef424c6101f5565b3480156104d357600080fd5b506102286104e2366004613a6b565b61133a565b3480156104f357600080fd5b50610228610502366004613a6b565b60009081526005602052604090205467ffffffffffffffff1690565b34801561052a57600080fd5b5061054d610539366004613a6b565b600090815260046020526040902054151590565b60405190151581526020016101ff565b34801561056957600080fd5b506102286105783660046138bb565b611352565b34801561058957600080fd5b506101f5611395565b34801561059e57600080fd5b5060405173ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001681526020016101ff565b6101f56105f1366004613cb4565b61139f565b348160005b81811015610786577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82018114600086868481811061063c5761063c613cef565b905060200281019061064e9190613d1e565b61065790613f9c565b602081015180519192509080158061067457508260400151518114155b156106ab576040517f947d5a8400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b8181101561074f576107476040518060a00160405280866000015181526020018584815181106106e0576106e0613cef565b602002602001015181526020018660400151848151811061070357610703613cef565b60200260200101518152602001866060015173ffffffffffffffffffffffffffffffffffffffff168152602001866080015167ffffffffffffffff1681525061145d565b6001016106ae565b5061076583600001518385606001518a88611652565b61076f90886140c6565b96505050505061077f8160010190565b90506105fb565b5050505050565b600080610798611caa565b90508260005b818110156107d1576107c9338787848181106107bc576107bc613cef565b9050602002013585611cd5565b60010161079e565b50909150505b92915050565b6060600280546107ec906140d9565b80601f0160208091040260200160405190810160405280929190818152602001828054610818906140d9565b80156108655780601f1061083a57610100808354040283529160200191610865565b820191906000526020600020905b81548152906001019060200180831161084857829003601f168201915b5050505050905090565b600061088261087d83614248565b611dd4565b604080516001808252818301909252600091816020015b6040805160c081018252600080825260208083018290529282018190526060808301829052608083015260a082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90920191018161089957905050905061090760208401846142c3565b610910906142f7565b8160008151811061092357610923613cef565b602090810291909101015261094c83358261094460c0870160a088016139b7565b346001611f59565b6020015160008151811061096257610962613cef565b6020026020010151915050919050565b60608160008167ffffffffffffffff81111561099057610990613d5c565b6040519080825280602002602001820160405280156109c357816020015b60608152602001906001900390816109ae5790505b509050600034815b84811015610add577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8501811436898984818110610a0b57610a0b613cef565b9050602002810190610a1d9190614303565b9050610a2c6020820182614337565b9050600003610a67576040517f947d5a8400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610a8c8235610a7b6020850185614337565b610a849161439f565b338887611f59565b8051909150610a9b90866140c6565b94508060200151878581518110610ab457610ab4613cef565b602002602001018190525080602001515186019550505050610ad68160010190565b90506109cb565b50610ae88383612694565b979650505050505050565b604080516001808252818301909252600091816020015b6040805180820190915260008082526020820152815260200190600190039081610b0a579050509050610b4536839003830160208401614413565b81600081518110610b5857610b58613cef565b6020908102919091010152610b7282358233346001611652565b505050565b348160005b81811015610786577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8201811436868684818110610bbc57610bbc613cef565b9050602002810190610bce9190614303565b9050610c3b8135610be2602084018461442f565b808060200260200160405190810160405280939291908181526020016000905b82821015610c2e57610c1f60408302860136819003810190614413565b81526020019060010190610c02565b5050505050338886611652565b610c4590866140c6565b94505050610c538160010190565b9050610b7c565b600080610c65611caa565b90506107d7838261277e565b6060610c9c7f0000000000000000000000000000000000000000000000000000000000000000612840565b610cc57f0000000000000000000000000000000000000000000000000000000000000000612840565b610cee7f0000000000000000000000000000000000000000000000000000000000000000612840565b604051602001610d0093929190614497565b604051602081830303815290604052905090565b6000610d1e611caa565b905090565b33600090815260036020526040902054808211610d6c576040517f756688fe00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3360009081526003602090815260409182902084905581518381529081018490527f57b09af877df9068fd60a69d7b21f5576b8b38955812d6ae4ac52942f1e38fb7910160405180910390a15050565b600060608082808083610def7f0000000000000000000000000000000000000000000000000000000000000000836128fe565b610e1a7f000000000000000000000000000000000000000000000000000000000000000060016128fe565b604080516000808252602082019092527f0f000000000000000000000000000000000000000000000000000000000000009b939a50919850469750309650945092509050565b60608160008167ffffffffffffffff811115610e7e57610e7e613d5c565b604051908082528060200260200182016040528015610eb157816020015b6060815260200190600190039081610e9c5790505b509050600034815b84811015610add577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8501811436898984818110610ef957610ef9613cef565b9050602002810190610f0b9190613d1e565b9050366000610f1d6020840184614337565b909250905080801580610f3e5750610f38604085018561450d565b90508114155b15610f75576040517f947d5a8400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b818110156110565761104e6040518060a0016040528087600001358152602001868685818110610faa57610faa613cef565b9050602002810190610fbc91906142c3565b610fc5906142f7565b8152602001610fd7604089018961450d565b85818110610fe757610fe7613cef565b905060600201803603810190610ffd9190614574565b81526020016110126080890160608a016139b7565b73ffffffffffffffffffffffffffffffffffffffff16815260200161103d60a0890160808a01613a9c565b67ffffffffffffffff169052611dd4565b600101610f78565b50600061107f8535611068858761439f565b6110786080890160608a016139b7565b8b8a611f59565b805190915061108e90896140c6565b975080602001518a88815181106110a7576110a7613cef565b6020026020010181905250806020015151890198505050505050506110cc8160010190565b9050610eb9565b604080516101408101825260008082526020820181905291810182905260608082018390526080820183905260a0820183905260c0820183905260e0820183905261010082019290925261012081019190915260008281526004602081815260409283902083516101408101855281548152600182015492810192909252600281015467ffffffffffffffff808216958401959095526801000000000000000081048516606084015270010000000000000000000000000000000090049093166080820152600383015460a08201529082015473ffffffffffffffffffffffffffffffffffffffff90811660c0830152600583015490811660e083015274010000000000000000000000000000000000000000900460ff1615156101008201526006820180549192916101208401919061120c906140d9565b80601f0160208091040260200160405190810160405280929190818152602001828054611238906140d9565b80156112855780601f1061125a57610100808354040283529160200191611285565b820191906000526020600020905b81548152906001019060200180831161126857829003601f168201915b5050505050815250509050919050565b6112ac6112a736839003830183614590565b61145d565b604080516001808252818301909252600091816020015b60408051808201909152600080825260208201528152602001906001900390816112c35790505090506112fe36839003830160208401614413565b8160008151811061131157611311613cef565b6020908102919091010152610b7282358261133260e0860160c087016139b7565b346001611652565b600080611345611caa565b90506107d7338483611cd5565b60008061135d611caa565b90508260005b818110156107d15761138d86868381811061138057611380613cef565b905060200201358461277e565b600101611363565b6000610d1e6129a9565b604080516001808252818301909252600091829190816020015b6040805160c081018252600080825260208083018290529282018190526060808301829052608083015260a082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092019101816113b957905050905061142760208401846142c3565b611430906142f7565b8160008151811061144357611443613cef565b602090810291909101015261094c83358233346001611f59565b608081015167ffffffffffffffff1615801590611498575061147d611caa565b67ffffffffffffffff16816080015167ffffffffffffffff16105b156114cf576040517f1ab7da6b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6020808201516040808401518451835184860151606088015173ffffffffffffffffffffffffffffffffffffffff166000908152600390975293862080549596939593946115a0947f2d4116d8c9824e4c316453e5c2843a1885580374159ce8768603c49085ef424c94939287611545836145fe565b909155506080808b015160408051602081019890985287019590955260608601939093529184015260a083015267ffffffffffffffff1660c082015260e0015b60405160208183030381529060405280519060200120612ae1565b905061161684606001518284602001518560400151866000015160405160200161160293929190928352602083019190915260f81b7fff0000000000000000000000000000000000000000000000000000000000000016604082015260410190565b604051602081830303815290604052612b29565b61164c576040517f8baa579f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050565b6040517fa2ea7c6e00000000000000000000000000000000000000000000000000000000815260048101869052600090819073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063a2ea7c6e90602401600060405180830381865afa1580156116e2573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526117289190810190614636565b8051909150611763576040517fbf37b20e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b855160008167ffffffffffffffff81111561178057611780613d5c565b60405190808252806020026020018201604052801561181f57816020015b60408051610140810182526000808252602080830182905292820181905260608083018290526080830182905260a0830182905260c0830182905260e0830182905261010083019190915261012082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90920191018161179e5790505b50905060008267ffffffffffffffff81111561183d5761183d613d5c565b604051908082528060200260200182016040528015611866578160200160208202803683370190505b50905060005b83811015611c8c5760008a828151811061188857611888613cef565b60209081029190910181015180516000908152600490925260409091208054919250906118e1576040517fc5723b5100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8c81600101541461191e576040517fbf37b20e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600581015473ffffffffffffffffffffffffffffffffffffffff8c8116911614611974576040517f4ca8886700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600581015474010000000000000000000000000000000000000000900460ff166119ca576040517f157bd4c300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002810154700100000000000000000000000000000000900467ffffffffffffffff1615611a24576040517f905e710700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611a2c611caa565b6002820180547fffffffffffffffff0000000000000000ffffffffffffffffffffffffffffffff811670010000000000000000000000000000000067ffffffffffffffff948516810291821793849055604080516101408101825287548152600188015460208201529386169286169290921791830191909152680100000000000000008304841660608301529091049091166080820152600382015460a0820152600482015473ffffffffffffffffffffffffffffffffffffffff90811660c0830152600583015490811660e083015274010000000000000000000000000000000000000000900460ff1615156101008201526006820180548391610120840191611b37906140d9565b80601f0160208091040260200160405190810160405280929190818152602001828054611b63906140d9565b8015611bb05780601f10611b8557610100808354040283529160200191611bb0565b820191906000526020600020905b815481529060010190602001808311611b9357829003601f168201915b505050505081525050858481518110611bcb57611bcb613cef565b60200260200101819052508160200151848481518110611bed57611bed613cef565b6020026020010181815250508c8b73ffffffffffffffffffffffffffffffffffffffff16868581518110611c2357611c23613cef565b602002602001015160c0015173ffffffffffffffffffffffffffffffffffffffff167ff930a6e2523c9cc298691873087a740550b8fc85a0680830414c148ed927f6158560000151604051611c7a91815260200190565b60405180910390a4505060010161186c565b50611c9c84838360018b8b612ba4565b9a9950505050505050505050565b60075460009067ffffffffffffffff1615611cd0575060075467ffffffffffffffff1690565b504290565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600660209081526040808320858452918290529091205467ffffffffffffffff1615611d49576040517fec9d6eeb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008381526020829052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001667ffffffffffffffff861690811790915590519091859173ffffffffffffffffffffffffffffffffffffffff8816917f92a1f7a41a7c585a8b09e25b195e225b1d43248daca46b0faf9e0792777a222991a450505050565b608081015167ffffffffffffffff1615801590611e0f5750611df4611caa565b67ffffffffffffffff16816080015167ffffffffffffffff16105b15611e46576040517f1ab7da6b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60208082015160408084015184518351848601518486015160608088015160808901518051908b012060a08a0151928c015173ffffffffffffffffffffffffffffffffffffffff1660009081526003909b52978a208054999a979997986115a0987ff83bb2b0ede93a840239f7e701a54d9bc35f03701f51ae153d601c6947ff3d3f989796959491928b611ed9836145fe565b909155506080808f015160408051602081019c909c528b019990995273ffffffffffffffffffffffffffffffffffffffff90971660608a015267ffffffffffffffff9586169689019690965292151560a088015260c087019190915260e08601526101008501526101208401919091521661014082015261016001611585565b60408051808201909152600081526060602082015284516040805180820190915260008152606060208201528167ffffffffffffffff811115611f9e57611f9e613d5c565b604051908082528060200260200182016040528015611fc7578160200160208202803683370190505b5060208201526040517fa2ea7c6e000000000000000000000000000000000000000000000000000000008152600481018990526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063a2ea7c6e90602401600060405180830381865afa15801561205b573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526120a19190810190614636565b80519091506120dc576040517fbf37b20e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008367ffffffffffffffff8111156120f7576120f7613d5c565b60405190808252806020026020018201604052801561219657816020015b60408051610140810182526000808252602080830182905292820181905260608083018290526080830182905260a0830182905260c0830182905260e0830182905261010083019190915261012082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092019101816121155790505b50905060008467ffffffffffffffff8111156121b4576121b4613d5c565b6040519080825280602002602001820160405280156121dd578160200160208202803683370190505b50905060005b858110156126735760008b82815181106121ff576121ff613cef565b60200260200101519050600067ffffffffffffffff16816020015167ffffffffffffffff16141580156122515750612235611caa565b67ffffffffffffffff16816020015167ffffffffffffffff1611155b15612288576040517f08e8b93700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b846040015115801561229b575080604001515b156122d2576040517f157bd4c300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006040518061014001604052806000801b81526020018f81526020016122f7611caa565b67ffffffffffffffff168152602001836020015167ffffffffffffffff168152602001600067ffffffffffffffff16815260200183606001518152602001836000015173ffffffffffffffffffffffffffffffffffffffff1681526020018d73ffffffffffffffffffffffffffffffffffffffff16815260200183604001511515815260200183608001518152509050600080600090505b6123998382612f93565b600081815260046020526040902054909250156123b85760010161238f565b81835260008281526004602081815260409283902086518155908601516001820155918501516002830180546060880151608089015167ffffffffffffffff908116700100000000000000000000000000000000027fffffffffffffffff0000000000000000ffffffffffffffffffffffffffffffff92821668010000000000000000027fffffffffffffffffffffffffffffffff000000000000000000000000000000009094169190951617919091171691909117905560a0850151600383015560c0850151908201805473ffffffffffffffffffffffffffffffffffffffff9283167fffffffffffffffffffffffff000000000000000000000000000000000000000090911617905560e0850151600583018054610100880151151574010000000000000000000000000000000000000000027fffffffffffffffffffffff00000000000000000000000000000000000000000090911692909316919091179190911790556101208401518491906006820190612537908261475c565b50505060608401511561258e57606084015160009081526004602052604090205461258e576040517fc5723b5100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b828786815181106125a1576125a1613cef565b60200260200101819052508360a001518686815181106125c3576125c3613cef565b60200260200101818152505081896020015186815181106125e6576125e6613cef565b6020026020010181815250508f8e73ffffffffffffffffffffffffffffffffffffffff16856000015173ffffffffffffffffffffffffffffffffffffffff167f8bf46bf4cfd674fa735a3d63ec1c9ad4153f033c290341f3a588b75685141b358560405161265691815260200190565b60405180910390a45050505061266c8160010190565b90506121e3565b5061268383838360008c8c612ba4565b845250919998505050505050505050565b606060008267ffffffffffffffff8111156126b1576126b1613d5c565b6040519080825280602002602001820160405280156126da578160200160208202803683370190505b508451909150600090815b8181101561277357600087828151811061270157612701613cef565b6020026020010151905060008151905060005b8181101561275f5782818151811061272e5761272e613cef565b602002602001015187878151811061274857612748613cef565b602090810291909101015260019586019501612714565b50505061276c8160010190565b90506126e5565b509195945050505050565b60008281526005602052604090205467ffffffffffffffff16156127ce576040517f2e26794600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008281526005602052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001667ffffffffffffffff85169081179091559051909184917f5aafceeb1c7ad58e4a84898bdee37c02c0fc46e7d24e6b60e8209449f183459f9190a35050565b6060600061284d83612ff2565b600101905060008167ffffffffffffffff81111561286d5761286d613d5c565b6040519080825280601f01601f191660200182016040528015612897576020820181803683370190505b5090508181016020015b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85049450846128a157509392505050565b606060ff831461291857612911836130d4565b90506107d7565b818054612924906140d9565b80601f0160208091040260200160405190810160405280929190818152602001828054612950906140d9565b801561299d5780601f106129725761010080835404028352916020019161299d565b820191906000526020600020905b81548152906001019060200180831161298057829003601f168201915b505050505090506107d7565b60003073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016148015612a0f57507f000000000000000000000000000000000000000000000000000000000000000046145b15612a3957507f000000000000000000000000000000000000000000000000000000000000000090565b610d1e604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60006107d7612aee6129a9565b836040517f19010000000000000000000000000000000000000000000000000000000000008152600281019290925260228201526042902090565b6000806000612b388585613113565b90925090506000816004811115612b5157612b51614876565b148015612b8957508573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b80612b9a5750612b9a868686613158565b9695505050505050565b84516000906001819003612bfc57612bf48888600081518110612bc957612bc9613cef565b602002602001015188600081518110612be457612be4613cef565b60200260200101518888886132b5565b915050612b9a565b602088015173ffffffffffffffffffffffffffffffffffffffff8116612c9d5760005b82811015612c8257878181518110612c3957612c39613cef565b6020026020010151600014612c7a576040517f1574f9f300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600101612c1f565b508315612c9257612c92856135d4565b600092505050612b9a565b6000808273ffffffffffffffffffffffffffffffffffffffff1663ce46e0466040518163ffffffff1660e01b8152600401602060405180830381865afa158015612ceb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d0f91906148a5565b905060005b84811015612dcc5760008a8281518110612d3057612d30613cef565b6020026020010151905080600003612d485750612dc4565b82612d7f576040517f1574f9f300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b88811115612db9576040517f1101129400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b978890039792909201915b600101612d14565b508715612ea7576040517f88e5b2d900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8416906388e5b2d9908490612e29908e908e906004016148c2565b60206040518083038185885af1158015612e47573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190612e6c91906148a5565b612ea2576040517fbf2f3a8b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b612f76565b6040517f91db0b7e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8416906391db0b7e908490612efd908e908e906004016148c2565b60206040518083038185885af1158015612f1b573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190612f4091906148a5565b612f76576040517fe8bee83900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8515612f8557612f85876135d4565b509998505050505050505050565b60208083015160c084015160e0850151604080870151606088015161010089015160a08a01516101208b01519451600099612fd499989796918c9101614956565b60405160208183030381529060405280519060200120905092915050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831061303b577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310613067576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061308557662386f26fc10000830492506010015b6305f5e100831061309d576305f5e100830492506008015b61271083106130b157612710830492506004015b606483106130c3576064830492506002015b600a83106107d75760010192915050565b606060006130e1836135e7565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b60008082516041036131495760208301516040840151606085015160001a61313d87828585613628565b94509450505050613151565b506000905060025b9250929050565b60008060008573ffffffffffffffffffffffffffffffffffffffff16631626ba7e60e01b868660405160240161318f929190614a34565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009094169390931790925290516132189190614a55565b600060405180830381855afa9150503d8060008114613253576040519150601f19603f3d011682016040523d82523d6000602084013e613258565b606091505b509150915081801561326c57506020815110155b8015612b9a575080517f1626ba7e00000000000000000000000000000000000000000000000000000000906132aa9083016020908101908401614a67565b149695505050505050565b602086015160009073ffffffffffffffffffffffffffffffffffffffff8116613329578515613310576040517f1574f9f300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b821561331f5761331f846135d4565b6000915050612b9a565b8515613414578073ffffffffffffffffffffffffffffffffffffffff1663ce46e0466040518163ffffffff1660e01b8152600401602060405180830381865afa15801561337a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061339e91906148a5565b6133d4576040517f1574f9f300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8386111561340e576040517f1101129400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b85840393505b84156134ec576040517fe49617e100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82169063e49617e190889061346e908b90600401613c62565b60206040518083038185885af115801561348c573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906134b191906148a5565b6134e7576040517fccf3bb2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6135b9565b6040517fe60c350500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82169063e60c3505908890613540908b90600401613c62565b60206040518083038185885af115801561355e573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061358391906148a5565b6135b9576040517fbd8ba84d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82156135c8576135c8846135d4565b50939695505050505050565b80156135e4576135e43382613717565b50565b600060ff8216601f8111156107d7576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561365f575060009050600361370e565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156136b3573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff81166137075760006001925092505061370e565b9150600090505b94509492505050565b80471015613786576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064015b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d80600081146137e0576040519150601f19603f3d011682016040523d82523d6000602084013e6137e5565b606091505b5050905080610b72576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d61792068617665207265766572746564000000000000606482015260840161377d565b60008083601f84011261388857600080fd5b50813567ffffffffffffffff8111156138a057600080fd5b6020830191508360208260051b850101111561315157600080fd5b600080602083850312156138ce57600080fd5b823567ffffffffffffffff8111156138e557600080fd5b6138f185828601613876565b90969095509350505050565b60005b83811015613918578181015183820152602001613900565b50506000910152565b600081518084526139398160208601602086016138fd565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600061397e6020830184613921565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff811681146135e457600080fd5b80356139b281613985565b919050565b6000602082840312156139c957600080fd5b813561397e81613985565b6000602082840312156139e657600080fd5b813567ffffffffffffffff8111156139fd57600080fd5b820160e0818503121561397e57600080fd5b6020808252825182820181905260009190848201906040850190845b81811015613a4757835183529284019291840191600101613a2b565b50909695505050505050565b600060608284031215613a6557600080fd5b50919050565b600060208284031215613a7d57600080fd5b5035919050565b803567ffffffffffffffff811681146139b257600080fd5b600060208284031215613aae57600080fd5b61397e82613a84565b600081518084526020808501945080840160005b83811015613ae757815187529582019590820190600101613acb565b509495945050505050565b7fff000000000000000000000000000000000000000000000000000000000000008816815260e060208201526000613b2d60e0830189613921565b8281036040840152613b3f8189613921565b905086606084015273ffffffffffffffffffffffffffffffffffffffff861660808401528460a084015282810360c0840152611c9c8185613ab7565b600061014082518452602083015160208501526040830151613ba9604086018267ffffffffffffffff169052565b506060830151613bc5606086018267ffffffffffffffff169052565b506080830151613be1608086018267ffffffffffffffff169052565b5060a083015160a085015260c0830151613c1360c086018273ffffffffffffffffffffffffffffffffffffffff169052565b5060e0830151613c3b60e086018273ffffffffffffffffffffffffffffffffffffffff169052565b506101008381015115159085015261012080840151818601839052612b9a83870182613921565b60208152600061397e6020830184613b7b565b60006101008284031215613a6557600080fd5b60008060408385031215613c9b57600080fd5b8235613ca681613985565b946020939093013593505050565b600060208284031215613cc657600080fd5b813567ffffffffffffffff811115613cdd57600080fd5b82016040818503121561397e57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61833603018112613d5257600080fd5b9190910192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160a0810167ffffffffffffffff81118282101715613dae57613dae613d5c565b60405290565b60405160c0810167ffffffffffffffff81118282101715613dae57613dae613d5c565b6040516080810167ffffffffffffffff81118282101715613dae57613dae613d5c565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715613e4157613e41613d5c565b604052919050565b600067ffffffffffffffff821115613e6357613e63613d5c565b5060051b60200190565b600060408284031215613e7f57600080fd5b6040516040810181811067ffffffffffffffff82111715613ea257613ea2613d5c565b604052823581526020928301359281019290925250919050565b600060608284031215613ece57600080fd5b6040516060810181811067ffffffffffffffff82111715613ef157613ef1613d5c565b604052905080823560ff81168114613f0857600080fd5b8082525060208301356020820152604083013560408201525092915050565b600082601f830112613f3857600080fd5b81356020613f4d613f4883613e49565b613dfa565b82815260609283028501820192828201919087851115613f6c57600080fd5b8387015b85811015613f8f57613f828982613ebc565b8452928401928101613f70565b5090979650505050505050565b600060a08236031215613fae57600080fd5b613fb6613d8b565b8235815260208084013567ffffffffffffffff80821115613fd657600080fd5b9085019036601f830112613fe957600080fd5b8135613ff7613f4882613e49565b81815260069190911b8301840190848101903683111561401657600080fd5b938501935b8285101561403f5761402d3686613e6d565b8252858201915060408501945061401b565b8086880152505050604086013592508083111561405b57600080fd5b505061406936828601613f27565b60408301525061407b606084016139a7565b606082015261408c60808401613a84565b608082015292915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b818103818111156107d7576107d7614097565b600181811c908216806140ed57607f821691505b602082108103613a65577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b80151581146135e457600080fd5b600067ffffffffffffffff82111561414e5761414e613d5c565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600060c0828403121561418c57600080fd5b614194613db4565b905081356141a181613985565b815260206141b0838201613a84565b8183015260408301356141c281614126565b604083015260608381013590830152608083013567ffffffffffffffff8111156141eb57600080fd5b8301601f810185136141fc57600080fd5b803561420a613f4882614134565b818152868483850101111561421e57600080fd5b818484018583013760008483830101528060808601525050505060a082013560a082015292915050565b600060e0823603121561425a57600080fd5b614262613d8b565b82358152602083013567ffffffffffffffff81111561428057600080fd5b61428c3682860161417a565b60208301525061429f3660408501613ebc565b604082015260a08301356142b281613985565b606082015261408c60c08401613a84565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41833603018112613d5257600080fd5b60006107d7368361417a565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1833603018112613d5257600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261436c57600080fd5b83018035915067ffffffffffffffff82111561438757600080fd5b6020019150600581901b360382131561315157600080fd5b60006143ad613f4884613e49565b80848252602080830192508560051b8501368111156143cb57600080fd5b855b8181101561440757803567ffffffffffffffff8111156143ed5760008081fd5b6143f936828a0161417a565b8652509382019382016143cd565b50919695505050505050565b60006040828403121561442557600080fd5b61397e8383613e6d565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261446457600080fd5b83018035915067ffffffffffffffff82111561447f57600080fd5b6020019150600681901b360382131561315157600080fd5b600084516144a98184602089016138fd565b80830190507f2e0000000000000000000000000000000000000000000000000000000000000080825285516144e5816001850160208a016138fd565b600192019182015283516145008160028401602088016138fd565b0160020195945050505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261454257600080fd5b83018035915067ffffffffffffffff82111561455d57600080fd5b602001915060608102360382131561315157600080fd5b60006060828403121561458657600080fd5b61397e8383613ebc565b600061010082840312156145a357600080fd5b6145ab613d8b565b823581526145bc8460208501613e6d565b60208201526145ce8460608501613ebc565b604082015260c08301356145e181613985565b60608201526145f260e08401613a84565b60808201529392505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361462f5761462f614097565b5060010190565b6000602080838503121561464957600080fd5b825167ffffffffffffffff8082111561466157600080fd5b908401906080828703121561467557600080fd5b61467d613dd7565b825181528383015161468e81613985565b8185015260408301516146a081614126565b60408201526060830151828111156146b757600080fd5b80840193505086601f8401126146cc57600080fd5b825191506146dc613f4883614134565b82815287858486010111156146f057600080fd5b6146ff838683018787016138fd565b60608201529695505050505050565b601f821115610b7257600081815260208120601f850160051c810160208610156147355750805b601f850160051c820191505b8181101561475457828155600101614741565b505050505050565b815167ffffffffffffffff81111561477657614776613d5c565b61478a8161478484546140d9565b8461470e565b602080601f8311600181146147dd57600084156147a75750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555614754565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b8281101561482a5788860151825594840194600190910190840161480b565b508582101561486657878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000602082840312156148b757600080fd5b815161397e81614126565b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b83811015614937577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0888703018552614925868351613b7b565b955093820193908201906001016148eb565b50508584038187015250505061494d8185613ab7565b95945050505050565b89815260007fffffffffffffffffffffffffffffffffffffffff000000000000000000000000808b60601b166020840152808a60601b166034840152507fffffffffffffffff000000000000000000000000000000000000000000000000808960c01b166048840152808860c01b1660508401525085151560f81b605883015284605983015283516149ef8160798501602088016138fd565b80830190507fffffffff000000000000000000000000000000000000000000000000000000008460e01b166079820152607d81019150509a9950505050505050505050565b828152604060208201526000614a4d6040830184613921565b949350505050565b60008251613d528184602087016138fd565b600060208284031215614a7957600080fd5b505191905056fea164736f6c6343000813000a";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract ISchemaRegistry";
            readonly name: "registry";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "AccessDenied";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "AlreadyRevoked";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "AlreadyRevokedOffchain";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "AlreadyTimestamped";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "DeadlineExpired";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InsufficientValue";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidAttestation";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidAttestations";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidExpirationTime";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidLength";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidNonce";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidOffset";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidRegistry";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidRevocation";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidRevocations";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidSchema";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidShortString";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidSignature";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidVerifier";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "Irrevocable";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotFound";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotPayable";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "str";
            readonly type: "string";
        }];
        readonly name: "StringTooLong";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "WrongSchema";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "attester";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes32";
            readonly name: "uid";
            readonly type: "bytes32";
        }, {
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "schemaUID";
            readonly type: "bytes32";
        }];
        readonly name: "Attested";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [];
        readonly name: "EIP712DomainChanged";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "oldNonce";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "newNonce";
            readonly type: "uint256";
        }];
        readonly name: "NonceIncreased";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "attester";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes32";
            readonly name: "uid";
            readonly type: "bytes32";
        }, {
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "schemaUID";
            readonly type: "bytes32";
        }];
        readonly name: "Revoked";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "revoker";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "data";
            readonly type: "bytes32";
        }, {
            readonly indexed: true;
            readonly internalType: "uint64";
            readonly name: "timestamp";
            readonly type: "uint64";
        }];
        readonly name: "RevokedOffchain";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "data";
            readonly type: "bytes32";
        }, {
            readonly indexed: true;
            readonly internalType: "uint64";
            readonly name: "timestamp";
            readonly type: "uint64";
        }];
        readonly name: "Timestamped";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "schema";
                readonly type: "bytes32";
            }, {
                readonly components: readonly [{
                    readonly internalType: "address";
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint64";
                    readonly name: "expirationTime";
                    readonly type: "uint64";
                }, {
                    readonly internalType: "bool";
                    readonly name: "revocable";
                    readonly type: "bool";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "refUID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "data";
                    readonly type: "bytes";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "value";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct AttestationRequestData";
                readonly name: "data";
                readonly type: "tuple";
            }];
            readonly internalType: "struct AttestationRequest";
            readonly name: "request";
            readonly type: "tuple";
        }];
        readonly name: "attest";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "schema";
                readonly type: "bytes32";
            }, {
                readonly components: readonly [{
                    readonly internalType: "address";
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint64";
                    readonly name: "expirationTime";
                    readonly type: "uint64";
                }, {
                    readonly internalType: "bool";
                    readonly name: "revocable";
                    readonly type: "bool";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "refUID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "data";
                    readonly type: "bytes";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "value";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct AttestationRequestData";
                readonly name: "data";
                readonly type: "tuple";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint8";
                    readonly name: "v";
                    readonly type: "uint8";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "r";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "s";
                    readonly type: "bytes32";
                }];
                readonly internalType: "struct Signature";
                readonly name: "signature";
                readonly type: "tuple";
            }, {
                readonly internalType: "address";
                readonly name: "attester";
                readonly type: "address";
            }, {
                readonly internalType: "uint64";
                readonly name: "deadline";
                readonly type: "uint64";
            }];
            readonly internalType: "struct DelegatedAttestationRequest";
            readonly name: "delegatedRequest";
            readonly type: "tuple";
        }];
        readonly name: "attestByDelegation";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "eip712Domain";
        readonly outputs: readonly [{
            readonly internalType: "bytes1";
            readonly name: "fields";
            readonly type: "bytes1";
        }, {
            readonly internalType: "string";
            readonly name: "name";
            readonly type: "string";
        }, {
            readonly internalType: "string";
            readonly name: "version";
            readonly type: "string";
        }, {
            readonly internalType: "uint256";
            readonly name: "chainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "verifyingContract";
            readonly type: "address";
        }, {
            readonly internalType: "bytes32";
            readonly name: "salt";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint256[]";
            readonly name: "extensions";
            readonly type: "uint256[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getAttestTypeHash";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "uid";
            readonly type: "bytes32";
        }];
        readonly name: "getAttestation";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "uid";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "schema";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint64";
                readonly name: "time";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "expirationTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "revocationTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "bytes32";
                readonly name: "refUID";
                readonly type: "bytes32";
            }, {
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "attester";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "revocable";
                readonly type: "bool";
            }, {
                readonly internalType: "bytes";
                readonly name: "data";
                readonly type: "bytes";
            }];
            readonly internalType: "struct Attestation";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getDomainSeparator";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getName";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }];
        readonly name: "getNonce";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "revoker";
            readonly type: "address";
        }, {
            readonly internalType: "bytes32";
            readonly name: "data";
            readonly type: "bytes32";
        }];
        readonly name: "getRevokeOffchain";
        readonly outputs: readonly [{
            readonly internalType: "uint64";
            readonly name: "";
            readonly type: "uint64";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getRevokeTypeHash";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getSchemaRegistry";
        readonly outputs: readonly [{
            readonly internalType: "contract ISchemaRegistry";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getTime";
        readonly outputs: readonly [{
            readonly internalType: "uint64";
            readonly name: "";
            readonly type: "uint64";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "data";
            readonly type: "bytes32";
        }];
        readonly name: "getTimestamp";
        readonly outputs: readonly [{
            readonly internalType: "uint64";
            readonly name: "";
            readonly type: "uint64";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "newNonce";
            readonly type: "uint256";
        }];
        readonly name: "increaseNonce";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "uid";
            readonly type: "bytes32";
        }];
        readonly name: "isAttestationValid";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "schema";
                readonly type: "bytes32";
            }, {
                readonly components: readonly [{
                    readonly internalType: "address";
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint64";
                    readonly name: "expirationTime";
                    readonly type: "uint64";
                }, {
                    readonly internalType: "bool";
                    readonly name: "revocable";
                    readonly type: "bool";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "refUID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "data";
                    readonly type: "bytes";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "value";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct AttestationRequestData[]";
                readonly name: "data";
                readonly type: "tuple[]";
            }];
            readonly internalType: "struct MultiAttestationRequest[]";
            readonly name: "multiRequests";
            readonly type: "tuple[]";
        }];
        readonly name: "multiAttest";
        readonly outputs: readonly [{
            readonly internalType: "bytes32[]";
            readonly name: "";
            readonly type: "bytes32[]";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "schema";
                readonly type: "bytes32";
            }, {
                readonly components: readonly [{
                    readonly internalType: "address";
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint64";
                    readonly name: "expirationTime";
                    readonly type: "uint64";
                }, {
                    readonly internalType: "bool";
                    readonly name: "revocable";
                    readonly type: "bool";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "refUID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "data";
                    readonly type: "bytes";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "value";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct AttestationRequestData[]";
                readonly name: "data";
                readonly type: "tuple[]";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint8";
                    readonly name: "v";
                    readonly type: "uint8";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "r";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "s";
                    readonly type: "bytes32";
                }];
                readonly internalType: "struct Signature[]";
                readonly name: "signatures";
                readonly type: "tuple[]";
            }, {
                readonly internalType: "address";
                readonly name: "attester";
                readonly type: "address";
            }, {
                readonly internalType: "uint64";
                readonly name: "deadline";
                readonly type: "uint64";
            }];
            readonly internalType: "struct MultiDelegatedAttestationRequest[]";
            readonly name: "multiDelegatedRequests";
            readonly type: "tuple[]";
        }];
        readonly name: "multiAttestByDelegation";
        readonly outputs: readonly [{
            readonly internalType: "bytes32[]";
            readonly name: "";
            readonly type: "bytes32[]";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "schema";
                readonly type: "bytes32";
            }, {
                readonly components: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "uid";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "value";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct RevocationRequestData[]";
                readonly name: "data";
                readonly type: "tuple[]";
            }];
            readonly internalType: "struct MultiRevocationRequest[]";
            readonly name: "multiRequests";
            readonly type: "tuple[]";
        }];
        readonly name: "multiRevoke";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "schema";
                readonly type: "bytes32";
            }, {
                readonly components: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "uid";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "value";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct RevocationRequestData[]";
                readonly name: "data";
                readonly type: "tuple[]";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint8";
                    readonly name: "v";
                    readonly type: "uint8";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "r";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "s";
                    readonly type: "bytes32";
                }];
                readonly internalType: "struct Signature[]";
                readonly name: "signatures";
                readonly type: "tuple[]";
            }, {
                readonly internalType: "address";
                readonly name: "revoker";
                readonly type: "address";
            }, {
                readonly internalType: "uint64";
                readonly name: "deadline";
                readonly type: "uint64";
            }];
            readonly internalType: "struct MultiDelegatedRevocationRequest[]";
            readonly name: "multiDelegatedRequests";
            readonly type: "tuple[]";
        }];
        readonly name: "multiRevokeByDelegation";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32[]";
            readonly name: "data";
            readonly type: "bytes32[]";
        }];
        readonly name: "multiRevokeOffchain";
        readonly outputs: readonly [{
            readonly internalType: "uint64";
            readonly name: "";
            readonly type: "uint64";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32[]";
            readonly name: "data";
            readonly type: "bytes32[]";
        }];
        readonly name: "multiTimestamp";
        readonly outputs: readonly [{
            readonly internalType: "uint64";
            readonly name: "";
            readonly type: "uint64";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "schema";
                readonly type: "bytes32";
            }, {
                readonly components: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "uid";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "value";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct RevocationRequestData";
                readonly name: "data";
                readonly type: "tuple";
            }];
            readonly internalType: "struct RevocationRequest";
            readonly name: "request";
            readonly type: "tuple";
        }];
        readonly name: "revoke";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "schema";
                readonly type: "bytes32";
            }, {
                readonly components: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "uid";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "value";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct RevocationRequestData";
                readonly name: "data";
                readonly type: "tuple";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint8";
                    readonly name: "v";
                    readonly type: "uint8";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "r";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "s";
                    readonly type: "bytes32";
                }];
                readonly internalType: "struct Signature";
                readonly name: "signature";
                readonly type: "tuple";
            }, {
                readonly internalType: "address";
                readonly name: "revoker";
                readonly type: "address";
            }, {
                readonly internalType: "uint64";
                readonly name: "deadline";
                readonly type: "uint64";
            }];
            readonly internalType: "struct DelegatedRevocationRequest";
            readonly name: "delegatedRequest";
            readonly type: "tuple";
        }];
        readonly name: "revokeByDelegation";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "data";
            readonly type: "bytes32";
        }];
        readonly name: "revokeOffchain";
        readonly outputs: readonly [{
            readonly internalType: "uint64";
            readonly name: "";
            readonly type: "uint64";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint64";
            readonly name: "newTime";
            readonly type: "uint64";
        }];
        readonly name: "setTime";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "data";
            readonly type: "bytes32";
        }];
        readonly name: "timestamp";
        readonly outputs: readonly [{
            readonly internalType: "uint64";
            readonly name: "";
            readonly type: "uint64";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "version";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): TestEASInterface;
    static connect(address: string, runner?: ContractRunner | null): TestEAS;
}
export {};
//# sourceMappingURL=TestEAS__factory.d.ts.map