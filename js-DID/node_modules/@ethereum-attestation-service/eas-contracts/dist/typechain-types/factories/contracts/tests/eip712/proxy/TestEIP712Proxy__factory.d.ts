import { ContractFactory, ContractTransactionResponse } from "ethers";
import type { Signer, AddressLike, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type { TestEIP712Proxy, TestEIP712ProxyInterface } from "../../../../../contracts/tests/eip712/proxy/TestEIP712Proxy";
type TestEIP712ProxyConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class TestEIP712Proxy__factory extends ContractFactory {
    constructor(...args: TestEIP712ProxyConstructorParams);
    getDeployTransaction(eas: AddressLike, name: string, overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<ContractDeployTransaction>;
    deploy(eas: AddressLike, name: string, overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<TestEIP712Proxy & {
        deploymentTransaction(): ContractTransactionResponse;
    }>;
    connect(runner: ContractRunner | null): TestEIP712Proxy__factory;
    static readonly bytecode = "0x6101e06040523480156200001257600080fd5b5060405162002e2738038062002e27833981016040819052620000359162000232565b6040805180820190915260058152640312e322e360dc1b60208201526001608052600260a052600060c0819052839183918291906200007690839062000171565b610180526200008781600162000171565b6101a052815160208084019190912061014052815190820120610160524661010052620001186101405161016051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60e052505030610120526001600160a01b0382166200014a576040516341bc07ff60e11b815260040160405180910390fd5b6001600160a01b0382166101c05260026200016682826200039c565b5050505050620004c2565b600060208351101562000191576200018983620001aa565b9050620001a4565b816200019e84826200039c565b5060ff90505b92915050565b600080829050601f81511115620001e1578260405163305a27a960e01b8152600401620001d8919062000468565b60405180910390fd5b8051620001ee826200049d565b179392505050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620002295781810151838201526020016200020f565b50506000910152565b600080604083850312156200024657600080fd5b82516001600160a01b03811681146200025e57600080fd5b60208401519092506001600160401b03808211156200027c57600080fd5b818501915085601f8301126200029157600080fd5b815181811115620002a657620002a6620001f6565b604051601f8201601f19908116603f01168101908382118183101715620002d157620002d1620001f6565b81604052828152886020848701011115620002eb57600080fd5b620002fe8360208301602088016200020c565b80955050505050509250929050565b600181811c908216806200032257607f821691505b6020821081036200034357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200039757600081815260208120601f850160051c81016020861015620003725750805b601f850160051c820191505b8181101562000393578281556001016200037e565b5050505b505050565b81516001600160401b03811115620003b857620003b8620001f6565b620003d081620003c984546200030d565b8462000349565b602080601f831160018114620004085760008415620003ef5750858301515b600019600386901b1c1916600185901b17855562000393565b600085815260208120601f198616915b82811015620004395788860151825594840194600190910190840162000418565b5085821015620004585787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6020815260008251806020840152620004898160408501602087016200020c565b601f01601f19169190910160400192915050565b80516020808301519190811015620003435760001960209190910360031b1b16919050565b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516101c0516128c262000565600039600081816101fa015281816105270152818161063f01528181610af30152610cd40152600061084e01526000610824015260006114440152600061141c01526000611377015260006113a1015260006113cb015260006107cc015260006107a30152600061077a01526128c26000f3fe6080604052600436106100dd5760003560e01c806384b0196e1161007f578063b82b7acc11610059578063b82b7acc14610279578063b83010d314610299578063dda94e21146102cc578063ed24911d146102ec57600080fd5b806384b0196e1461021e5780639541152514610246578063a6d4dbc71461026657600080fd5b806317d7de7c116100bb57806317d7de7c146101a15780633c042715146101c357806354fd4d50146101d657806365c40b9c146101eb57600080fd5b80630eabf660146100e257806310d736d5146100f757806312b11a1714610164575b600080fd5b6100f56100f0366004611a68565b610301565b005b34801561010357600080fd5b5061013a610112366004611aaa565b60009081526003602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b34801561017057600080fd5b507f9d3e80e7032dc16815a5f67aa94e851240ae3b24eed13a7431bdac738f8145675b60405190815260200161015b565b3480156101ad57600080fd5b506101b6610596565b60405161015b9190611b31565b6101936101d1366004611b4b565b610628565b3480156101e257600080fd5b506101b6610773565b3480156101f757600080fd5b507f000000000000000000000000000000000000000000000000000000000000000061013a565b34801561022a57600080fd5b50610233610816565b60405161015b9796959493929190611b86565b610259610254366004611a68565b6108ba565b60405161015b9190611c45565b6100f5610274366004611c89565b610cbb565b34801561028557600080fd5b506100f5610294366004611fc2565b610dbb565b3480156102a557600080fd5b507fd4e76f924411647a916bb4ae4631b3cf45c44e2da56ed1c63edb18ebc97ba5e4610193565b3480156102d857600080fd5b506100f56102e736600461204e565b610dc7565b3480156102f857600080fd5b50610193610dd0565b8060008167ffffffffffffffff81111561031d5761031d611ca2565b60405190808252806020026020018201604052801561036357816020015b60408051808201909152600081526060602082015281526020019060019003908161033b5790505b50905060005b828110156104e9576000858583818110610385576103856120ba565b905060200281019061039791906120e9565b6103a0906121c0565b60208101518051919250908015806103bd57508260400151518114155b156103f4576040517f947d5a8400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b8181101561049e576000838281518110610413576104136120ba565b602002602001015190506104956040518060a001604052808760000151815260200183815260200187604001518581518110610451576104516120ba565b60200260200101518152602001876060015173ffffffffffffffffffffffffffffffffffffffff168152602001876080015167ffffffffffffffff16815250610ddf565b506001016103f7565b50604051806040016040528084600001518152602001838152508585815181106104ca576104ca6120ba565b60200260200101819052505050506104e28160010190565b9050610369565b506040517f4cb7e9e500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690634cb7e9e590349061055e9085906004016122b0565b6000604051808303818588803b15801561057757600080fd5b505af115801561058b573d6000803e3d6000fd5b505050505050505050565b6060600280546105a59061237f565b80601f01602080910402602001604051908101604052809291908181526020018280546105d19061237f565b801561061e5780601f106105f35761010080835404028352916020019161061e565b820191906000526020600020905b81548152906001019060200180831161060157829003601f168201915b5050505050905090565b600061063b610636836123cc565b611021565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663f17325e73460405180604001604052808760000135815260200187806020019061069f91906123d8565b6106a89061240c565b8152506040518363ffffffff1660e01b81526004016106c7919061248b565b60206040518083038185885af11580156106e5573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061070a91906124b0565b905061071c60c0840160a085016124c9565b600082815260036020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905592915050565b606061079e7f00000000000000000000000000000000000000000000000000000000000000006111f4565b6107c77f00000000000000000000000000000000000000000000000000000000000000006111f4565b6107f07f00000000000000000000000000000000000000000000000000000000000000006111f4565b604051602001610802939291906124e4565b604051602081830303815290604052905090565b6000606080828080836108497f0000000000000000000000000000000000000000000000000000000000000000836112b2565b6108747f000000000000000000000000000000000000000000000000000000000000000060016112b2565b604080516000808252602082019092527f0f000000000000000000000000000000000000000000000000000000000000009b939a50919850469750309650945092509050565b60608160008167ffffffffffffffff8111156108d8576108d8611ca2565b60405190808252806020026020018201604052801561091e57816020015b6040805180820190915260008152606060208201528152602001906001900390816108f65790505b50905060005b82811015610aee573686868381811061093f5761093f6120ba565b905060200281019061095191906120e9565b9050366000610963602084018461255a565b909250905080801580610984575061097e60408501856125c2565b90508114155b156109bb576040517f947d5a8400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b81811015610a9c57610a946040518060a00160405280876000013581526020018686858181106109f0576109f06120ba565b9050602002810190610a0291906123d8565b610a0b9061240c565b8152602001610a1d60408901896125c2565b85818110610a2d57610a2d6120ba565b905060600201803603810190610a439190612629565b8152602001610a586080890160608a016124c9565b73ffffffffffffffffffffffffffffffffffffffff168152602001610a8360a0890160808a01612645565b67ffffffffffffffff169052611021565b6001016109be565b50604080518082019091528435815260208101610ab98486612660565b815250868681518110610ace57610ace6120ba565b602002602001018190525050505050610ae78160010190565b9050610924565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166344adc90e34846040518363ffffffff1660e01b8152600401610b4b91906126d4565b60006040518083038185885af1158015610b69573d6000803e3d6000fd5b50505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610bb091908101906127c7565b90506000805b84811015610cad5736888883818110610bd157610bd16120ba565b9050602002810190610be391906120e9565b9050366000610bf5602084018461255a565b90925090508060005b81811015610c9757610c1660808601606087016124c9565b600360008a8a81518110610c2c57610c2c6120ba565b6020026020010151815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550866001019650610c908160010190565b9050610bfe565b5050505050610ca68160010190565b9050610bb6565b509093505050505b92915050565b610cd2610ccd3683900383018361204e565b610ddf565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663469262673460405180604001604052808560000135815260200185602001803603810190610d389190612858565b90526040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815281516004820152602091820151805160248301529091015160448201526064016000604051808303818588803b158015610d9f57600080fd5b505af1158015610db3573d6000803e3d6000fd5b505050505050565b610dc481611021565b50565b610dc481610ddf565b6000610dda61135d565b905090565b608081015167ffffffffffffffff1615801590610e1357504267ffffffffffffffff16816080015167ffffffffffffffff16105b15610e4a576040517f1ab7da6b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60208082015180516000908152600390925260409091205473ffffffffffffffffffffffffffffffffffffffff1680610eaf576040517fc5723b5100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff81163314610efe576040517f4ca8886700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040830151610f0c81611495565b835183516020808601516080880151604051600095610f9895610f7d957fd4e76f924411647a916bb4ae4631b3cf45c44e2da56ed1c63edb18ebc97ba5e495929491930194855260208501939093526040840191909152606083015267ffffffffffffffff16608082015260a00190565b604051602081830303815290604052805190602001206115a3565b9050846060015173ffffffffffffffffffffffffffffffffffffffff16610fcd828460000151856020015186604001516115eb565b73ffffffffffffffffffffffffffffffffffffffff161461101a576040517f8baa579f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050505050565b608081015167ffffffffffffffff161580159061105557504267ffffffffffffffff16816080015167ffffffffffffffff16105b1561108c576040517f1ab7da6b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6020810151604082015161109f81611495565b600061116c7f9d3e80e7032dc16815a5f67aa94e851240ae3b24eed13a7431bdac738f81456760001b856000015185600001518660200151876040015188606001518960800151805190602001208a60a001518c60800151604051602001610f7d99989796959493929190988952602089019790975273ffffffffffffffffffffffffffffffffffffffff95909516604088015267ffffffffffffffff9384166060880152911515608087015260a086015260c085015260e0840191909152166101008201526101200190565b9050836060015173ffffffffffffffffffffffffffffffffffffffff166111a1828460000151856020015186604001516115eb565b73ffffffffffffffffffffffffffffffffffffffff16146111ee576040517f8baa579f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050565b6060600061120183611613565b600101905060008167ffffffffffffffff81111561122157611221611ca2565b6040519080825280601f01601f19166020018201604052801561124b576020820181803683370190505b5090508181016020015b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a850494508461125557509392505050565b606060ff83146112cc576112c5836116f5565b9050610cb5565b8180546112d89061237f565b80601f01602080910402602001604051908101604052809291908181526020018280546113049061237f565b80156113515780601f1061132657610100808354040283529160200191611351565b820191906000526020600020905b81548152906001019060200180831161133457829003601f168201915b50505050509050610cb5565b60003073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161480156113c357507f000000000000000000000000000000000000000000000000000000000000000046145b156113ed57507f000000000000000000000000000000000000000000000000000000000000000090565b610dda604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b8051602080830151604080850151905160f89490941b7fff0000000000000000000000000000000000000000000000000000000000000016928401929092526021830152604182015260009060610160405160208183030381529060405290506004816040516115059190612874565b9081526040519081900360200190205460ff161561154f576040517fcce9a82400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60016004826040516115619190612874565b90815260405190819003602001902080549115157fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff009092169190911790555050565b6000610cb56115b061135d565b836040517f19010000000000000000000000000000000000000000000000000000000000008152600281019290925260228201526042902090565b60008060006115fc87878787611734565b9150915061160981611823565b5095945050505050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831061165c577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310611688576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106116a657662386f26fc10000830492506010015b6305f5e10083106116be576305f5e100830492506008015b61271083106116d257612710830492506004015b606483106116e4576064830492506002015b600a8310610cb55760010192915050565b60606000611702836119db565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561176b575060009050600361181a565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156117bf573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff81166118135760006001925092505061181a565b9150600090505b94509492505050565b600081600481111561183757611837612886565b0361183f5750565b600181600481111561185357611853612886565b036118bf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064015b60405180910390fd5b60028160048111156118d3576118d3612886565b0361193a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016118b6565b600381600481111561194e5761194e612886565b03610dc4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f756500000000000000000000000000000000000000000000000000000000000060648201526084016118b6565b600060ff8216601f811115610cb5576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008083601f840112611a2e57600080fd5b50813567ffffffffffffffff811115611a4657600080fd5b6020830191508360208260051b8501011115611a6157600080fd5b9250929050565b60008060208385031215611a7b57600080fd5b823567ffffffffffffffff811115611a9257600080fd5b611a9e85828601611a1c565b90969095509350505050565b600060208284031215611abc57600080fd5b5035919050565b60005b83811015611ade578181015183820152602001611ac6565b50506000910152565b60008151808452611aff816020860160208601611ac3565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000611b446020830184611ae7565b9392505050565b600060208284031215611b5d57600080fd5b813567ffffffffffffffff811115611b7457600080fd5b820160e08185031215611b4457600080fd5b7fff00000000000000000000000000000000000000000000000000000000000000881681526000602060e081840152611bc260e084018a611ae7565b8381036040850152611bd4818a611ae7565b6060850189905273ffffffffffffffffffffffffffffffffffffffff8816608086015260a0850187905284810360c0860152855180825283870192509083019060005b81811015611c3357835183529284019291840191600101611c17565b50909c9b505050505050505050505050565b6020808252825182820181905260009190848201906040850190845b81811015611c7d57835183529284019291840191600101611c61565b50909695505050505050565b60006101008284031215611c9c57600080fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715611cf457611cf4611ca2565b60405290565b60405160a0810167ffffffffffffffff81118282101715611cf457611cf4611ca2565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611d6457611d64611ca2565b604052919050565b803573ffffffffffffffffffffffffffffffffffffffff81168114611d9057600080fd5b919050565b803567ffffffffffffffff81168114611d9057600080fd5b600082601f830112611dbe57600080fd5b813567ffffffffffffffff811115611dd857611dd8611ca2565b611e0960207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611d1d565b818152846020838601011115611e1e57600080fd5b816020850160208301376000918101602001919091529392505050565b600060c08284031215611e4d57600080fd5b611e55611cd1565b9050611e6082611d6c565b8152611e6e60208301611d95565b602082015260408201358015158114611e8657600080fd5b604082015260608281013590820152608082013567ffffffffffffffff811115611eaf57600080fd5b611ebb84828501611dad565b60808301525060a082013560a082015292915050565b600060608284031215611ee357600080fd5b6040516060810181811067ffffffffffffffff82111715611f0657611f06611ca2565b604052905080823560ff81168114611f1d57600080fd5b8082525060208301356020820152604083013560408201525092915050565b600060e08284031215611f4e57600080fd5b611f56611cfa565b905081358152602082013567ffffffffffffffff811115611f7657600080fd5b611f8284828501611e3b565b602083015250611f958360408401611ed1565b6040820152611fa660a08301611d6c565b6060820152611fb760c08301611d95565b608082015292915050565b600060208284031215611fd457600080fd5b813567ffffffffffffffff811115611feb57600080fd5b611ff784828501611f3c565b949350505050565b60006040828403121561201157600080fd5b6040516040810181811067ffffffffffffffff8211171561203457612034611ca2565b604052823581526020928301359281019290925250919050565b6000610100828403121561206157600080fd5b612069611cfa565b8235815261207a8460208501611fff565b602082015261208c8460608501611ed1565b604082015261209d60c08401611d6c565b60608201526120ae60e08401611d95565b60808201529392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6183360301811261211d57600080fd5b9190910192915050565b600067ffffffffffffffff82111561214157612141611ca2565b5060051b60200190565b600082601f83011261215c57600080fd5b8135602061217161216c83612127565b611d1d565b8281526060928302850182019282820191908785111561219057600080fd5b8387015b858110156121b3576121a68982611ed1565b8452928401928101612194565b5090979650505050505050565b600060a082360312156121d257600080fd5b6121da611cfa565b8235815260208084013567ffffffffffffffff808211156121fa57600080fd5b9085019036601f83011261220d57600080fd5b813561221b61216c82612127565b81815260069190911b8301840190848101903683111561223a57600080fd5b938501935b82851015612263576122513686611fff565b8252858201915060408501945061223f565b8086880152505050604086013592508083111561227f57600080fd5b505061228d3682860161214b565b60408301525061229f60608401611d6c565b6060820152611fb760808401611d95565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015612370578984037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0018652825180518552880151888501889052805188860181905290890190839060608701905b8083101561235b5761234782855180518252602090810151910152565b928b019260019290920191908a019061232a565b50978a019795505050918701916001016122d8565b50919998505050505050505050565b600181811c9082168061239357607f821691505b602082108103611c9c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000610cb53683611f3c565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff4183360301811261211d57600080fd5b6000610cb53683611e3b565b73ffffffffffffffffffffffffffffffffffffffff815116825267ffffffffffffffff6020820151166020830152604081015115156040830152606081015160608301526000608082015160c0608085015261247760c0850182611ae7565b60a093840151949093019390935250919050565b602081528151602082015260006020830151604080840152611ff76060840182612418565b6000602082840312156124c257600080fd5b5051919050565b6000602082840312156124db57600080fd5b611b4482611d6c565b600084516124f6818460208901611ac3565b80830190507f2e000000000000000000000000000000000000000000000000000000000000008082528551612532816001850160208a01611ac3565b6001920191820152835161254d816002840160208801611ac3565b0160020195945050505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261258f57600080fd5b83018035915067ffffffffffffffff8211156125aa57600080fd5b6020019150600581901b3603821315611a6157600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126125f757600080fd5b83018035915067ffffffffffffffff82111561261257600080fd5b6020019150606081023603821315611a6157600080fd5b60006060828403121561263b57600080fd5b611b448383611ed1565b60006020828403121561265757600080fd5b611b4482611d95565b600061266e61216c84612127565b80848252602080830192508560051b85013681111561268c57600080fd5b855b818110156126c857803567ffffffffffffffff8111156126ae5760008081fd5b6126ba36828a01611e3b565b86525093820193820161268e565b50919695505050505050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b858110156127b7577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08b85030187528251805185528901518985018990528051898601819052908a0190606081881b870181019190870190855b818110156127a1577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa089850301835261278f848651612418565b948e01949350918d0191600101612755565b505050978a0197945050918801916001016126fb565b50919a9950505050505050505050565b600060208083850312156127da57600080fd5b825167ffffffffffffffff8111156127f157600080fd5b8301601f8101851361280257600080fd5b805161281061216c82612127565b81815260059190911b8201830190838101908783111561282f57600080fd5b928401925b8284101561284d57835182529284019290840190612834565b979650505050505050565b60006040828403121561286a57600080fd5b611b448383611fff565b6000825161211d818460208701611ac3565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea164736f6c6343000813000a";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IEAS";
            readonly name: "eas";
            readonly type: "address";
        }, {
            readonly internalType: "string";
            readonly name: "name";
            readonly type: "string";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "AccessDenied";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "DeadlineExpired";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidEAS";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidLength";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidShortString";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidSignature";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotFound";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "str";
            readonly type: "string";
        }];
        readonly name: "StringTooLong";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "UsedSignature";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [];
        readonly name: "EIP712DomainChanged";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "schema";
                readonly type: "bytes32";
            }, {
                readonly components: readonly [{
                    readonly internalType: "address";
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint64";
                    readonly name: "expirationTime";
                    readonly type: "uint64";
                }, {
                    readonly internalType: "bool";
                    readonly name: "revocable";
                    readonly type: "bool";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "refUID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "data";
                    readonly type: "bytes";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "value";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct AttestationRequestData";
                readonly name: "data";
                readonly type: "tuple";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint8";
                    readonly name: "v";
                    readonly type: "uint8";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "r";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "s";
                    readonly type: "bytes32";
                }];
                readonly internalType: "struct Signature";
                readonly name: "signature";
                readonly type: "tuple";
            }, {
                readonly internalType: "address";
                readonly name: "attester";
                readonly type: "address";
            }, {
                readonly internalType: "uint64";
                readonly name: "deadline";
                readonly type: "uint64";
            }];
            readonly internalType: "struct DelegatedProxyAttestationRequest";
            readonly name: "delegatedRequest";
            readonly type: "tuple";
        }];
        readonly name: "attestByDelegation";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "eip712Domain";
        readonly outputs: readonly [{
            readonly internalType: "bytes1";
            readonly name: "fields";
            readonly type: "bytes1";
        }, {
            readonly internalType: "string";
            readonly name: "name";
            readonly type: "string";
        }, {
            readonly internalType: "string";
            readonly name: "version";
            readonly type: "string";
        }, {
            readonly internalType: "uint256";
            readonly name: "chainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "verifyingContract";
            readonly type: "address";
        }, {
            readonly internalType: "bytes32";
            readonly name: "salt";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint256[]";
            readonly name: "extensions";
            readonly type: "uint256[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getAttestTypeHash";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "uid";
            readonly type: "bytes32";
        }];
        readonly name: "getAttester";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getDomainSeparator";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getEAS";
        readonly outputs: readonly [{
            readonly internalType: "contract IEAS";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getName";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getRevokeTypeHash";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "schema";
                readonly type: "bytes32";
            }, {
                readonly components: readonly [{
                    readonly internalType: "address";
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint64";
                    readonly name: "expirationTime";
                    readonly type: "uint64";
                }, {
                    readonly internalType: "bool";
                    readonly name: "revocable";
                    readonly type: "bool";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "refUID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "data";
                    readonly type: "bytes";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "value";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct AttestationRequestData[]";
                readonly name: "data";
                readonly type: "tuple[]";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint8";
                    readonly name: "v";
                    readonly type: "uint8";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "r";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "s";
                    readonly type: "bytes32";
                }];
                readonly internalType: "struct Signature[]";
                readonly name: "signatures";
                readonly type: "tuple[]";
            }, {
                readonly internalType: "address";
                readonly name: "attester";
                readonly type: "address";
            }, {
                readonly internalType: "uint64";
                readonly name: "deadline";
                readonly type: "uint64";
            }];
            readonly internalType: "struct MultiDelegatedProxyAttestationRequest[]";
            readonly name: "multiDelegatedRequests";
            readonly type: "tuple[]";
        }];
        readonly name: "multiAttestByDelegation";
        readonly outputs: readonly [{
            readonly internalType: "bytes32[]";
            readonly name: "";
            readonly type: "bytes32[]";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "schema";
                readonly type: "bytes32";
            }, {
                readonly components: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "uid";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "value";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct RevocationRequestData[]";
                readonly name: "data";
                readonly type: "tuple[]";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint8";
                    readonly name: "v";
                    readonly type: "uint8";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "r";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "s";
                    readonly type: "bytes32";
                }];
                readonly internalType: "struct Signature[]";
                readonly name: "signatures";
                readonly type: "tuple[]";
            }, {
                readonly internalType: "address";
                readonly name: "revoker";
                readonly type: "address";
            }, {
                readonly internalType: "uint64";
                readonly name: "deadline";
                readonly type: "uint64";
            }];
            readonly internalType: "struct MultiDelegatedProxyRevocationRequest[]";
            readonly name: "multiDelegatedRequests";
            readonly type: "tuple[]";
        }];
        readonly name: "multiRevokeByDelegation";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "schema";
                readonly type: "bytes32";
            }, {
                readonly components: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "uid";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "value";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct RevocationRequestData";
                readonly name: "data";
                readonly type: "tuple";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint8";
                    readonly name: "v";
                    readonly type: "uint8";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "r";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "s";
                    readonly type: "bytes32";
                }];
                readonly internalType: "struct Signature";
                readonly name: "signature";
                readonly type: "tuple";
            }, {
                readonly internalType: "address";
                readonly name: "revoker";
                readonly type: "address";
            }, {
                readonly internalType: "uint64";
                readonly name: "deadline";
                readonly type: "uint64";
            }];
            readonly internalType: "struct DelegatedProxyRevocationRequest";
            readonly name: "delegatedRequest";
            readonly type: "tuple";
        }];
        readonly name: "revokeByDelegation";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "schema";
                readonly type: "bytes32";
            }, {
                readonly components: readonly [{
                    readonly internalType: "address";
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint64";
                    readonly name: "expirationTime";
                    readonly type: "uint64";
                }, {
                    readonly internalType: "bool";
                    readonly name: "revocable";
                    readonly type: "bool";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "refUID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "data";
                    readonly type: "bytes";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "value";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct AttestationRequestData";
                readonly name: "data";
                readonly type: "tuple";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint8";
                    readonly name: "v";
                    readonly type: "uint8";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "r";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "s";
                    readonly type: "bytes32";
                }];
                readonly internalType: "struct Signature";
                readonly name: "signature";
                readonly type: "tuple";
            }, {
                readonly internalType: "address";
                readonly name: "attester";
                readonly type: "address";
            }, {
                readonly internalType: "uint64";
                readonly name: "deadline";
                readonly type: "uint64";
            }];
            readonly internalType: "struct DelegatedProxyAttestationRequest";
            readonly name: "request";
            readonly type: "tuple";
        }];
        readonly name: "verifyAttest";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "schema";
                readonly type: "bytes32";
            }, {
                readonly components: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "uid";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "value";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct RevocationRequestData";
                readonly name: "data";
                readonly type: "tuple";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint8";
                    readonly name: "v";
                    readonly type: "uint8";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "r";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "s";
                    readonly type: "bytes32";
                }];
                readonly internalType: "struct Signature";
                readonly name: "signature";
                readonly type: "tuple";
            }, {
                readonly internalType: "address";
                readonly name: "revoker";
                readonly type: "address";
            }, {
                readonly internalType: "uint64";
                readonly name: "deadline";
                readonly type: "uint64";
            }];
            readonly internalType: "struct DelegatedProxyRevocationRequest";
            readonly name: "request";
            readonly type: "tuple";
        }];
        readonly name: "verifyRevoke";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "version";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): TestEIP712ProxyInterface;
    static connect(address: string, runner?: ContractRunner | null): TestEIP712Proxy;
}
export {};
//# sourceMappingURL=TestEIP712Proxy__factory.d.ts.map